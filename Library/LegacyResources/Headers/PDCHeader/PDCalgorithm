//==============================================================================================
//	FILENAME	:	PDCalgorithm
//	AUTHOR		:	Perl Script
//	CREATION	:	6/13/02
//	Copyright (C) MicroStrategy, Inc. 2002
//==============================================================================================
#ifndef PDCalgorithm
#define PDCalgorithm

// this must be the *first* file included
#include "ProtectedSource/Prolog.h"

#ifdef _MSC_VER
#pragma warning(disable:4786) // 'identifier' : identifier was truncated to 'number' characters in the debug information
#pragma warning(disable:4251) // 'identifier' : class 'type' needs to have dll-interface to be used by clients of class 'type2'
#endif

#include <algorithm>

#if defined(_MSC_VER) && (_MSC_VER < 1300)

#ifdef max
#undef max
#endif 

#ifdef min
#undef min
#endif 

// 2003-06-06 vovechkin
// add missing min/max function templates in VC6
namespace std
{
	// TEMPLATE FUNCTION max
	template<class _Ty> inline
	const _Ty& max(const _Ty& _X, const _Ty& _Y)
	{
		return (_X < _Y ? _Y : _X);
	}

	// TEMPLATE FUNCTION max WITH PRED
	template<class _Ty, class _Pr> inline
	const _Ty& max(const _Ty& _X, const _Ty& _Y, _Pr _P)
	{
		return (_P(_X, _Y) ? _Y : _X);
	}

	// TEMPLATE FUNCTION min
	template<class _Ty> inline
	const _Ty& min(const _Ty& _X, const _Ty& _Y)
	{
		return (_Y < _X ? _Y : _X);
	}

	// TEMPLATE FUNCTION min WITH PRED
	template<class _Ty, class _Pr> inline
	const _Ty& min(const _Ty& _X, const _Ty& _Y, _Pr _P)
	{
		return (_P(_Y, _X) ? _Y : _X);
	}
}
#endif // _MSC_VER

// this must be the *last* file included
#include "ProtectedSource/Epilog.h"

#endif // PDCalgorithm
