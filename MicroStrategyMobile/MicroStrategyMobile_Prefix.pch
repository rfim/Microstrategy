//
// Prefix header for all source files of the 'MSTRMobile' target in the 'MSTRMobile' project
//

#ifdef __OBJC__

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

#ifndef __OPTIMIZE__
#import "assert.h"
#define NSSTRING_PRETTY_FUNCTION [NSString stringWithCString:__PRETTY_FUNCTION__ encoding:NSASCIIStringEncoding]
#    define NSLog(...) NSLog(__VA_ARGS__)
#else
#    define NSLog(...)
#endif

///////////////////////////////////////////////////////////////////////////////////////////////////
// Code Management

/**
 * based off gcc-supported flag for deprecating headers
 * Used in Apple's AvailabiltyInternal.h header.
 * __AVAILABILITY_INTERNAL_DEPRECATED         __attribute__((deprecated))
 */
#define __MIDEPRECATED_METHOD __attribute__((deprecated))

/**
 * Add this macro before each category implementation, so we don't have to use
 * -all_load or -force_load to load object files from static libraries that only contain
 * categories and no classes.
 * See http://developer.apple.com/library/mac/#qa/qa2006/qa1490.html for more info.
 */
#define MI_FIX_CATEGORY_BUG(name) @interface MI_FIX_CATEGORY_BUG_##name @end \
@implementation MI_FIX_CATEGORY_BUG_##name @end


///////////////////////////////////////////////////////////////////////////////////////////////////
// Safe releases

#define MI_RELEASE_SAFELY(__POINTER) { [__POINTER release]; __POINTER = nil; }
#define MI_INVALIDATE_TIMER(__TIMER) { [__TIMER invalidate]; __TIMER = nil; }

// Release a CoreFoundation object safely.
#define MI_RELEASE_CF_SAFELY(__REF) { if (nil != (__REF)) { CFRelease(__REF); __REF = nil; } }



///////////////////////////////////////////////////////////////////////////////////////////////////
// Masonry 3rd party for autolayout

//define this constant if you want to use Masonry without the 'mas_' prefix
#define MAS_SHORTHAND

//define this constant if you want to enable auto-boxing for default syntax
#define MAS_SHORTHAND_GLOBALS

#endif





